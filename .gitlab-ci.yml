# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
stages:
- build
- test
build tests and executable:
  stage: build
  only:
  - main
  script:
  - git submodule init
  - git submodule update
  - mkdir build && cd build
  - cmake -DCMAKE_BUILD_TYPE=Coverage -DWITH_UNIT_TEST=1 ..
  - make -j 2
  artifacts:
    name: "$CI_JOB_NAME"
    paths:
    - "$CI_PROJECT_DIR/build"
    expire_in: 1 day
test programs:
  stage: test
  only:
  - main
  dependencies:
  - build tests and executable
  script:
  - cd build
  - make test
  - cd ../tests/integrationTests
  - "./run_all_tests.sh"
  - cd ../../build
  - gcovr -f ../src/
  coverage: "/\\d*\\.*\\d+%/"
sast:
  variables:
    SAST_EXCLUDED_ANALYZERS: bandit, brakeman, eslint, gosec, kubesec, nodejs-scan,
      phpcs-security-audit, pmd-apex, security-code-scan, semgrep, sobelow, spotbugs
  stage: test
include:
- template: Security/SAST.gitlab-ci.yml
